---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: dbroleclaims.persistance.atlas.infoblox.com
spec:
  group: persistance.atlas.infoblox.com
  names:
    kind: DbRoleClaim
    listKind: DbRoleClaimList
    plural: dbroleclaims
    singular: dbroleclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: DbRoleClaim is the Schema for the dbroleclaims API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DbRoleClaimSpec defines the desired state of DbRoleClaim
            properties:
              class:
                default: default
                description: Class is used to run multiple instances of dbcontroller.
                type: string
              schemarolemap:
                additionalProperties:
                  type: string
                type: object
              secretName:
                description: The name of the secret to use for storing the ConnectionInfo.  Must
                  follow a naming convention that ensures it is unique.
                type: string
              sourceDatabaseClaim:
                description: SourceDatabaseClaim defines the DatabaseClaim which owns
                  the actual database
                properties:
                  name:
                    description: Name  of the source databaseclaim
                    type: string
                  namespace:
                    default: default
                    description: Namespace of the source databaseclaim
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - sourceDatabaseClaim
            type: object
          status:
            description: DbRoleClaimStatus defines the observed state of DbRoleClaim
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              error:
                description: Any errors related to provisioning this claim.
                type: string
              matchedSourceClaim:
                description: Identifies the databaseclaim this CR is associated with
                type: string
              schemasrolesupdatedat:
                description: Time the schemas and roles were updated
                format: date-time
                type: string
              schemasstatus:
                properties:
                  rolestatus:
                    additionalProperties:
                      type: string
                    type: object
                  schemastatus:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              secretUpdatedAt:
                description: Time the secret attached to this claim was updated
                format: date-time
                type: string
              sourceSecret:
                description: Identifies the source secret this claim in inheriting
                  from
                type: string
              sourceSecretResourceVersion:
                description: Tracks the resourceVersion of the source secret. Used
                  to identify changes to the secret and to trigger a sync
                type: string
              username:
                type: string
            required:
            - username
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
