
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: databaseclaims.persistance.atlas.infoblox.com
spec:
  group: persistance.atlas.infoblox.com
  names:
    kind: DatabaseClaim
    listKind: DatabaseClaimList
    plural: databaseclaims
    singular: databaseclaim
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DatabaseClaim is the Schema for the databaseclaims API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClaimSpec defines the desired state of DatabaseClaim
            properties:
              app_id:
                description: Specifies an indentifier for the application using the database.
                minLength: 1
                type: string
              db_type:
                description: Specifies the type of database to provision. Only postgres is supported.
                minLength: 0
                type: string
            type: object
          status:
            description: DatabaseClaimStatus defines the observed state of DatabaseClaim
            properties:
              connectionInfo:
                properties:
                  db_name:
                    type: string
                  hostname:
                    type: string
                  password:
                    type: string
                  port:
                    type: string
                  username:
                    type: string
                type: object
              state:
                type: string
              userCreateTime:
                format: date-time
                type: string
            required:
            - connectionInfo
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
