---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: schemauserclaims.persistance.atlas.infoblox.com
spec:
  group: persistance.atlas.infoblox.com
  names:
    kind: SchemaUserClaim
    listKind: SchemaUserClaimList
    plural: schemauserclaims
    shortNames:
    - usc
    - usclaim
    singular: schemauserclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Schema
      type: string
    - jsonPath: .status.usersStatus.userStatus
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: SchemaUserClaim is the Schema for the SchemaUserClaims API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              class:
                default: default
                description: Class is used to run multiple instances of dbcontroller.
                type: string
              database:
                description: Database defines the connection information to an existing
                  db
                properties:
                  dsn:
                    description: |-
                      DSN is the connection string used to reach the postgres database
                      must have protocol specifier at beginning (example: mysql://  postgres:// )
                    type: string
                  secretRef:
                    description: |-
                      SecretRef specifies a secret to use for connecting to the postgresdb (should be master/root)
                      TODO: document/validate the secret format required
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    type: object
                required:
                - dsn
                type: object
              schemas:
                description: Schemas holds the schemas to be created and the user
                  names to be created and granted access to this schema.
                items:
                  properties:
                    name:
                      type: string
                    users:
                      items:
                        properties:
                          username:
                            type: string
                        required:
                        - username
                        type: object
                      type: array
                  type: object
                type: array
            required:
            - schemas
            type: object
          status:
            description: SchemaUserClaimStatus defines the observed state of SchemaUserClaim
            properties:
              error:
                description: Any errors related to provisioning this claim.
                type: string
              schemas:
                properties:
                  name:
                    type: string
                  status:
                    type: string
                  usersstatus:
                    properties:
                      username:
                        type: string
                      userstatus:
                        type: string
                    required:
                    - username
                    - userstatus
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
