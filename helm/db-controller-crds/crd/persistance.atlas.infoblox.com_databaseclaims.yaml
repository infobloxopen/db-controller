---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: databaseclaims.persistance.atlas.infoblox.com
spec:
  group: persistance.atlas.infoblox.com
  names:
    kind: DatabaseClaim
    listKind: DatabaseClaimList
    plural: databaseclaims
    singular: databaseclaim
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DatabaseClaim is the Schema for the databaseclaims API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClaimSpec defines the desired state of DatabaseClaim
            properties:
              appId:
                description: Specifies an indentifier for the application using the
                  database.
                type: string
              class:
                default: default
                description: Class is used to run multiple instances of dbcontroller.
                type: string
              databaseName:
                description: The name of the database within InstanceLabel.
                type: string
              dbNameOverride:
                description: In most cases the AppID will match the database name.
                  In some cases, however, we will need to provide an optional override.
                type: string
              dsnName:
                description: DSN key name.
                type: string
              host:
                description: The optional host name where the database instance is
                  located. If the value is omitted, then the host value from the matching
                  InstanceLabel will be used.
                type: string
              instanceLabel:
                description: The matching fragment key name of the database instance
                  that will host the database.
                type: string
              minStorageGB:
                description: The optional MinStorageGB value requests the minimum
                  database host storage capacity in GBytes
                type: integer
              port:
                description: The optional port to use for connecting to the host.
                  If the value is omitted, then the host value from the matching InstanceLabel
                  will be used.
                type: string
              secretName:
                description: The name of the secret to use for storing the ConnectionInfo.  Must
                  follow a naming convention that ensures it is unique.
                type: string
              shape:
                description: The optional Shape values are arbitrary and help drive
                  instance selection
                type: string
              sourceDataFrom:
                description: SourceDataFrom specifies an existing database or backup
                  to use when initially provisioning the database. if the dbclaim
                  has already provisioned a database, this field is ignored
                properties:
                  database:
                    description: Database defines the connection information to an
                      existing db
                    properties:
                      dsn:
                        description: 'DSN is the connection string used to reach the
                          postgres database must have protocol specifier at beginning
                          (example: mysql://  postgres:// )'
                        type: string
                      secretRef:
                        description: 'SecretRef specifies a secret to use for connecting
                          to the postgresdb (should be master/root) TODO: document/validate
                          the secret format required'
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - dsn
                    type: object
                  s3:
                    description: S3 defines the location of a DB backup in an S3 bucket
                    properties:
                      bucket:
                        type: string
                      prefix:
                        description: Prefix is the path prefix of the S3 bucket within
                          which the backup to restore is located.
                        type: string
                      region:
                        type: string
                      secretRef:
                        description: 'SecretRef specifies a secret to use for connecting
                          to the s3 bucket via AWS client TODO: document/validate
                          the secret format required'
                        properties:
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                        - name
                        type: object
                      sourceEngine:
                        description: SourceEngine is the engine used to create the
                          backup.
                        type: string
                      sourceEngineVersion:
                        description: 'SourceEngineVersion is the version of the engine
                          used to create the backup. Example: "5.7.30"'
                        type: string
                    required:
                    - bucket
                    - region
                    - sourceEngine
                    - sourceEngineVersion
                    type: object
                  type:
                    description: Type specifies the type of source
                    type: string
                required:
                - type
                type: object
              tags:
                description: Tags
                items:
                  description: Tag
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  required:
                  - key
                  - value
                  type: object
                nullable: true
                type: array
              type:
                description: Specifies the type of database to provision. Only postgres
                  is supported.
                type: string
              useExistingSource:
                default: false
                description: UseExistingSource instructs the controller to perform
                  user management on the database currently defined in the SourceDataFrom
                  field. If sourceDataFrom is empty, this is ignored If this is set,
                  .sourceDataFrom.Type and .type must match to use an existing source
                  (since they must be the same) If this field was set and becomes
                  unset, migration of data will commence
                type: boolean
              userName:
                description: The username that the application will use for accessing
                  the database.
                type: string
            required:
            - appId
            - dsnName
            - type
            - userName
            type: object
          status:
            description: DatabaseClaimStatus defines the observed state of DatabaseClaim
            properties:
              activeDB:
                description: track the status of the active db being used by the application
                properties:
                  connectionInfo:
                    properties:
                      databaseName:
                        type: string
                      hostName:
                        type: string
                      password:
                        type: string
                      port:
                        type: string
                      sslMode:
                        type: string
                      userName:
                        type: string
                    type: object
                  connectionUpdatedAt:
                    description: Time the connection info was updated/created.
                    format: date-time
                    type: string
                  dbCreateAt:
                    description: Time the database was created
                    format: date-time
                    type: string
                  matchLabel:
                    description: The name of the label that was successfully matched
                      against the fragment key names in the db-controller configMap
                    type: string
                  userUpdatedAt:
                    description: Time the user/password was updated/created
                    format: date-time
                    type: string
                required:
                - connectionInfo
                type: object
              error:
                description: Any errors related to provisioning this claim.
                type: string
              migrationState:
                description: tracks status of DB migration. if empty, not started.
                  non empty denotes migration in progress, unless it is S_Completed
                type: string
              newDB:
                description: track the status of new db in the process of being created
                properties:
                  connectionInfo:
                    properties:
                      databaseName:
                        type: string
                      hostName:
                        type: string
                      password:
                        type: string
                      port:
                        type: string
                      sslMode:
                        type: string
                      userName:
                        type: string
                    type: object
                  connectionUpdatedAt:
                    description: Time the connection info was updated/created.
                    format: date-time
                    type: string
                  dbCreateAt:
                    description: Time the database was created
                    format: date-time
                    type: string
                  matchLabel:
                    description: The name of the label that was successfully matched
                      against the fragment key names in the db-controller configMap
                    type: string
                  userUpdatedAt:
                    description: Time the user/password was updated/created
                    format: date-time
                    type: string
                required:
                - connectionInfo
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
