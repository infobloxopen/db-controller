apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "db-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "db-controller.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "db-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      labels:
        {{- include "db-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "db-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: kube-rbac-proxy
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
        {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-manager
          ports:
          - containerPort: 8443
            name: https
          env:
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - --metrics-addr={{ .Values.metrics.address }}
            - --metrics-port={{ .Values.metrics.port }}
            - --health-probe-address={{ .Values.healthProbe.address }}
            - --health-probe-port={{ .Values.healthProbe.port }}
            - --enable-leader-election
            - --config-file=/etc/config/config.yaml
            {{ if .Values.zapLogger.develMode }}
            - --zap-devel
            {{ end }}
            {{ if .Values.zapLogger.level }}
            - --zap-log-level={{ .Values.zapLogger.level}}
            {{ end }}
          command:
            - /manager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.healthProbe.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.healthProbe.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "db-controller.name" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 60 }}
