apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "db-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "db-controller.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "db-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      labels:
        {{- include "db-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "db-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: manager
          ports:
          - containerPort: 8443
            name: https
          - containerPort: 9443
            name: webhook
          env:
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DBPROXY_IMAGE
              value: "{{ .Values.dbproxy.image.repository }}:{{ .Values.dbproxy.image.tag | default .Chart.AppVersion }}"
            - name: DSNEXEC_IMAGE
              value: "{{ .Values.dsnexec.image.repository }}:{{ .Values.dsnexec.image.tag | default .Chart.AppVersion }}"
          args:
            - --metrics-bind-address=:{{ .Values.metrics.port }}
            - --health-probe-bind-address=:{{ .Values.healthProbe.port }}
            - --leader-elect
            - --enable-db-proxy={{ .Values.dbproxy.enabled }}
            - --enable-dsnexec={{ .Values.dsnexec.enabled }}
            - --config-file=/etc/config/config.yaml
            - --dsnexec-sidecar-config-path=config/dsnexec/dsnexecsidecar.json
            - --db-identifier-prefix={{ tpl .Values.db.identifier.prefix . }}
            - --class={{ .Values.dbController.class }}
            - -zap-encoder={{ .Values.zapLogger.encoding }}
            - -zap-log-level={{ .Values.zapLogger.level }}
            - -zap-time-encoding={{ .Values.zapLogger.timeEncoding }}
          command:
            - /manager
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.healthProbe.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.healthProbe.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: pg-temp-volume
              mountPath: /pg-temp
            - name: config-volume
              mountPath: /etc/config
            {{- if or ( .Values.dbproxy.enabled ) ( .Values.dsnexec.enabled ) }}
            - name: cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
            {{- end }}
      volumes:
      - name: pg-temp-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: {{ include "db-controller.name" . }}-config
      {{- if or ( .Values.dbproxy.enabled ) ( .Values.dsnexec.enabled ) }}
      - name: cert
        secret:
          secretName: {{ include "db-controller.fullname" . }}-webhook
          optional: false
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 60 }}
