{{- if .Values.dbproxy.enabled }}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "db-controller.fullname" . }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "db-controller.fullname" . }}-webhook
webhooks:
- clientConfig:
    service:
      name: {{ include "db-controller.fullname" . }}
      path: /convert-deprecated-pod
      port: 9443
      namespace: {{ .Release.Namespace }}
  admissionReviewVersions: ["v1"]
  # Support existing pods that are not using labels to
  # indicate db-controller sidecar mutations are needed.
  # Use an ignore failurepolicy because this intercepts
  # all pod mutations in the cluster.
  failurePolicy: Ignore
  name: podconversion.persistance.atlas.infoblox.com
  reinvocationPolicy: Never
  objectSelector: {}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
- clientConfig:
    service:
      name: {{ include "db-controller.fullname" . }}
      path: /mutate--v1-pod
      port: 9443
      namespace: {{ .Release.Namespace }}
  admissionReviewVersions: ["v1"]
  failurePolicy: Fail
  name: dbproxy.persistance.atlas.infoblox.com
  reinvocationPolicy: IfNeeded
  objectSelector:
    matchExpressions:
      # This will locate a databaseclaim or a dbroleclaim
      - key: "persistance.atlas.infoblox.com/claim"
        operator: "Exists"
      - key: "persistance.atlas.infoblox.com/dbproxy"
        operator: "In"
        values:
          - "enabled"
        # Important to prevent multiple db-controllers from stepping on each other
      - key: "persistance.atlas.infoblox.com/class"
        operator: "In"
        values:
          - {{ .Values.dbController.class | quote }}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
- clientConfig:
    service:
      name: {{ include "db-controller.fullname" . }}
      path: /mutate--v1-pod
      port: 9443
      namespace: {{ .Release.Namespace }}
  sideEffects: None
  admissionReviewVersions: ["v1"]
  timeoutSeconds: 10
  failurePolicy: Fail
  name: dsnexec.persistance.atlas.infoblox.com
  reinvocationPolicy: IfNeeded
  objectSelector:
    matchExpressions:
      # This will locate a databaseclaim or a dbroleclaim
      - key: "persistance.atlas.infoblox.com/claim"
        operator: "Exists"
      - key: "persistance.atlas.infoblox.com/dsnexec"
        operator: "In"
        values:
          - "enabled"
        # Important to prevent multiple db-controllers from stepping on each other
      - key: "persistance.atlas.infoblox.com/class"
        operator: "In"
        values:
          - {{ .Values.dbController.class | quote }}
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    scope: "Namespaced"
{{- end }}
