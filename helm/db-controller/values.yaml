# Default values for db-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

secrets:
  enabled: false

env: local
ib:
  realm: "us"
lifecycle: "dev"
db:
  identifier:
    prefix: "{{ .Values.env }}"
dbController:
  class: default

tools:
  kubectl:
    repository: bitnami/kubectl
    pullPolicy: IfNotPresent
    tag: 1.28.5

image:
  repository: ghcr.io/infobloxopen/db-controller
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # tag: "TAG"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

metrics:
  port: 8080

healthProbe:
  port: 8081

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "{{ .Values.metrics.port }}"

podSecurityContext:
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8443

resources:
  limits:
    cpu: 100m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

terminationGracePeriodSeconds: 10

# enable pod disruption budget in case replicaCount > 1
pdb:
  enabled: false
  maxUnavailable: 25%

# deploying postgres pod, useful in case deploy in minikube
postgresql:
  enabled: false

dbproxy:
  enabled: true
  image:
    repository: ghcr.io/infobloxopen/dbproxy
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

dsnexec:
  # Do not enable this without writing complete unit and integration tests using helm
  enabled: false
  image:
    repository: "ghcr.io/infobloxopen/dsnexec"
    tag: ""

zapLogger:
  encoding: json
  level: info
  timeEncoding: rfc3339nano

controllerConfig:
  athena-shared:
    masterUsername: root
  authSource: secret
  # if aws authorization is used iam role must be provided
  #iamRole: rds-role
  caCertificateIdentifier: "rds-ca-rsa2048-g1"
  dbMultiAZEnabled: false
  dbSubnetGroupNameRef:
  defaultBackupPolicyValue: Bronze
  defaultMinStorageGB: 50
  defaultMasterPort: 5432
  defaultSslMode: require
  defaultMasterUsername: root
  defaultReclaimPolicy: delete
  # For Production this should be false and if SnapShot is not taken it will not be deleted
  defaultSkipFinalSnapshotBeforeDeletion: true
  defaultPubliclyAccessible: false
  defaultDeletionPolicy: orphan
  dynamicHostWaitTimeMin: 1
  enablePerfInsight: true
  # Possible values for enableCloudwatchLogsExport are all, none, postgresql and upgrade.
  enableCloudwatchLogsExport: "none"
  providerConfig: default
  # The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups.
  # Setting this parameter to 0 disables automated backups (in case of Aurora, 0 is N/A and will be set to 1 by default).
  # Possible values (0-35)
  backupRetentionDays: 0
  passwordConfig:
    passwordComplexity: enabled
    minPasswordLength: 15
    passwordRotationPeriod: 60m
  pgTemp: "/pg-temp/"
  region: us-east-1
  storageType: gp3
  supportSuperUserElevation: true
  # system funtions are created as functions in the database. The prefix is used as the schema name.
  # only "ib_" prefixed functions are supported at this time.
  systemFunctions:
    ib_realm: "{{ .Values.ib.realm }}"
    ib_env: "{{ .Values.env }}"
    ib_lifecycle: "{{ .Values.lifecycle }}"
  vpcSecurityGroupIDRefs:
