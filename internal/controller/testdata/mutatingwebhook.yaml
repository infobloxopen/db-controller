apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutating-webhook
webhooks:
- clientConfig:
    service:
      name: dbproxy
      path: /mutate--v1-pod
      namespace: default
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  name: dbproxy.persistance.atlas.infoblox.com
  objectSelector:
    matchExpressions:
      # This will locate a databaseclaim or a dbroleclaim
      - key: "persistance.atlas.infoblox.com/claim"
        operator: "Exists"
      - key: "persistance.atlas.infoblox.com/dbproxy"
        operator: "In"
        values:
          - "enabled"
        # Important to prevent multiple db-controllers from stepping on each other
      - key: "persistance.atlas.infoblox.com/class"
        operator: "In"
        values:
          - "testenv"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    scope: "Namespaced"
- clientConfig:
    service:
      name: dbproxy
      path: /mutate--v1-pod
      namespace: default
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  name: dsnexec.persistance.atlas.infoblox.com
  objectSelector:
    matchExpressions:
      # This will locate a databaseclaim or a dbroleclaim
      - key: "persistance.atlas.infoblox.com/claim"
        operator: "Exists"
      - key: "persistance.atlas.infoblox.com/dsnexec"
        operator: "In"
        values:
          - "enabled"
        # Important to prevent multiple db-controllers from stepping on each other
      - key: "persistance.atlas.infoblox.com/class"
        operator: "In"
        values:
          - "testenv"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    scope: "Namespaced"
